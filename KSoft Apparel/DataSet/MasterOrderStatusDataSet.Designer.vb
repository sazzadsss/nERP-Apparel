'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("MasterOrderStatusDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class MasterOrderStatusDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableMasterOrderStatus As MasterOrderStatusDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("MasterOrderStatus")) Is Nothing) Then
                MyBase.Tables.Add(New MasterOrderStatusDataTable(ds.Tables("MasterOrderStatus")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MasterOrderStatus() As MasterOrderStatusDataTable
        Get
            Return Me.tableMasterOrderStatus
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As MasterOrderStatusDataSet = CType(MyBase.Clone,MasterOrderStatusDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("MasterOrderStatus")) Is Nothing) Then
                MyBase.Tables.Add(New MasterOrderStatusDataTable(ds.Tables("MasterOrderStatus")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableMasterOrderStatus = CType(MyBase.Tables("MasterOrderStatus"),MasterOrderStatusDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMasterOrderStatus) Is Nothing) Then
                Me.tableMasterOrderStatus.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "MasterOrderStatusDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/MasterOrderStatusDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableMasterOrderStatus = New MasterOrderStatusDataTable()
        MyBase.Tables.Add(Me.tableMasterOrderStatus)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeMasterOrderStatus() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As MasterOrderStatusDataSet = New MasterOrderStatusDataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub MasterOrderStatusRowChangeEventHandler(ByVal sender As Object, ByVal e As MasterOrderStatusRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MasterOrderStatusDataTable
        Inherits Global.System.Data.TypedTableBase(Of MasterOrderStatusRow)
        
        Private columnProgramNo As Global.System.Data.DataColumn
        
        Private columnBuyerCode As Global.System.Data.DataColumn
        
        Private columnOrderReceiveDate As Global.System.Data.DataColumn
        
        Private columnMinEx As Global.System.Data.DataColumn
        
        Private columnMaxEx As Global.System.Data.DataColumn
        
        Private columnPO As Global.System.Data.DataColumn
        
        Private columnCon As Global.System.Data.DataColumn
        
        Private columnStyle As Global.System.Data.DataColumn
        
        Private columnGarmentDescription As Global.System.Data.DataColumn
        
        Private columnFabrication As Global.System.Data.DataColumn
        
        Private columnColor As Global.System.Data.DataColumn
        
        Private columnOrderQty As Global.System.Data.DataColumn
        
        Private columnFabricRequire As Global.System.Data.DataColumn
        
        Private columnFabricReceived As Global.System.Data.DataColumn
        
        Private columnFabricReceiveBalance As Global.System.Data.DataColumn
        
        Private columnTotalCutting As Global.System.Data.DataColumn
        
        Private columnCuttingPercentage As Global.System.Data.DataColumn
        
        Private columnCuttingBalance As Global.System.Data.DataColumn
        
        Private columnTotalPrintSend As Global.System.Data.DataColumn
        
        Private columnTotalPrintReceive As Global.System.Data.DataColumn
        
        Private columnPrintReceiveBalance As Global.System.Data.DataColumn
        
        Private columnTotalInput As Global.System.Data.DataColumn
        
        Private columnInputPercentage As Global.System.Data.DataColumn
        
        Private columnInputBalance As Global.System.Data.DataColumn
        
        Private columnMerchandiser As Global.System.Data.DataColumn
        
        Private columnSewingQuantity As Global.System.Data.DataColumn
        
        Private columnSewingPercentage As Global.System.Data.DataColumn
        
        Private columnSewingBalance As Global.System.Data.DataColumn
        
        Private columnPolyQuantity As Global.System.Data.DataColumn
        
        Private columnCartonQuantity As Global.System.Data.DataColumn
        
        Private columnShipmentQuantity As Global.System.Data.DataColumn
        
        Private columnShipmentCartonQuantity As Global.System.Data.DataColumn
        
        Private columnPrint As Global.System.Data.DataColumn
        
        Private columnWash As Global.System.Data.DataColumn
        
        Private columnEMB As Global.System.Data.DataColumn
        
        Private columnAOP As Global.System.Data.DataColumn
        
        Private columnLastDayFabricReceived As Global.System.Data.DataColumn
        
        Private columnLastDayCutting As Global.System.Data.DataColumn
        
        Private columnLastDayPrintReceive As Global.System.Data.DataColumn
        
        Private columnLastDaySewing As Global.System.Data.DataColumn
        
        Private columnProgramAndStyle As Global.System.Data.DataColumn
        
        Private columnPrintSupplier As Global.System.Data.DataColumn
        
        Private columnLastDayInput As Global.System.Data.DataColumn
        
        Private columnExcessCutting As Global.System.Data.DataColumn
        
        Private columnLastDayPrintSend As Global.System.Data.DataColumn
        
        Private columnFabricExcessReceive As Global.System.Data.DataColumn
        
        Private columnStockInHand As Global.System.Data.DataColumn
        
        Private columnTotalEmbSend As Global.System.Data.DataColumn
        
        Private columnLastDayEmdSend As Global.System.Data.DataColumn
        
        Private columnTotalEmbReceived As Global.System.Data.DataColumn
        
        Private columnLastDayEmbReceived As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MasterOrderStatus"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ProgramNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProgramNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BuyerCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBuyerCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OrderReceiveDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrderReceiveDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MinExColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMinEx
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MaxExColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaxEx
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property POColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ConColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property StyleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStyle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property GarmentDescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGarmentDescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FabricationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFabrication
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ColorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OrderQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrderQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FabricRequireColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFabricRequire
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FabricReceivedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFabricReceived
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FabricReceiveBalanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFabricReceiveBalance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TotalCuttingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalCutting
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CuttingPercentageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCuttingPercentage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CuttingBalanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCuttingBalance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TotalPrintSendColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalPrintSend
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TotalPrintReceiveColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalPrintReceive
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PrintReceiveBalanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrintReceiveBalance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TotalInputColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalInput
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property InputPercentageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInputPercentage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property InputBalanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInputBalance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MerchandiserColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMerchandiser
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SewingQuantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSewingQuantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SewingPercentageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSewingPercentage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SewingBalanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSewingBalance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PolyQuantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPolyQuantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CartonQuantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCartonQuantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ShipmentQuantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShipmentQuantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ShipmentCartonQuantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShipmentCartonQuantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PrintColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrint
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property WashColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWash
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EMBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AOPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAOP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LastDayFabricReceivedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLastDayFabricReceived
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LastDayCuttingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLastDayCutting
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LastDayPrintReceiveColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLastDayPrintReceive
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LastDaySewingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLastDaySewing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ProgramAndStyleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProgramAndStyle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PrintSupplierColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrintSupplier
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LastDayInputColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLastDayInput
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ExcessCuttingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExcessCutting
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LastDayPrintSendColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLastDayPrintSend
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FabricExcessReceiveColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFabricExcessReceive
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property StockInHandColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStockInHand
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TotalEmbSendColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalEmbSend
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LastDayEmdSendColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLastDayEmdSend
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TotalEmbReceivedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalEmbReceived
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LastDayEmbReceivedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLastDayEmbReceived
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MasterOrderStatusRow
            Get
                Return CType(Me.Rows(index),MasterOrderStatusRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event MasterOrderStatusRowChanging As MasterOrderStatusRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event MasterOrderStatusRowChanged As MasterOrderStatusRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event MasterOrderStatusRowDeleting As MasterOrderStatusRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event MasterOrderStatusRowDeleted As MasterOrderStatusRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddMasterOrderStatusRow(ByVal row As MasterOrderStatusRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddMasterOrderStatusRow( _
                    ByVal ProgramNo As String,  _
                    ByVal BuyerCode As String,  _
                    ByVal OrderReceiveDate As Date,  _
                    ByVal MinEx As Date,  _
                    ByVal MaxEx As Date,  _
                    ByVal PO As String,  _
                    ByVal Con As Decimal,  _
                    ByVal Style As String,  _
                    ByVal GarmentDescription As String,  _
                    ByVal Fabrication As String,  _
                    ByVal Color As String,  _
                    ByVal OrderQty As Long,  _
                    ByVal FabricRequire As Decimal,  _
                    ByVal FabricReceived As Decimal,  _
                    ByVal FabricReceiveBalance As Decimal,  _
                    ByVal TotalCutting As Decimal,  _
                    ByVal CuttingPercentage As Decimal,  _
                    ByVal CuttingBalance As Decimal,  _
                    ByVal TotalPrintSend As Decimal,  _
                    ByVal TotalPrintReceive As Decimal,  _
                    ByVal PrintReceiveBalance As Decimal,  _
                    ByVal TotalInput As Decimal,  _
                    ByVal InputPercentage As Decimal,  _
                    ByVal InputBalance As Decimal,  _
                    ByVal Merchandiser As String,  _
                    ByVal SewingQuantity As Decimal,  _
                    ByVal SewingPercentage As Decimal,  _
                    ByVal SewingBalance As Decimal,  _
                    ByVal PolyQuantity As Decimal,  _
                    ByVal CartonQuantity As Decimal,  _
                    ByVal ShipmentQuantity As Decimal,  _
                    ByVal ShipmentCartonQuantity As Decimal,  _
                    ByVal Print As String,  _
                    ByVal Wash As String,  _
                    ByVal EMB As String,  _
                    ByVal AOP As String,  _
                    ByVal LastDayFabricReceived As Decimal,  _
                    ByVal LastDayCutting As Decimal,  _
                    ByVal LastDayPrintReceive As Decimal,  _
                    ByVal LastDaySewing As Decimal,  _
                    ByVal ProgramAndStyle As String,  _
                    ByVal PrintSupplier As String,  _
                    ByVal LastDayInput As Decimal,  _
                    ByVal ExcessCutting As Decimal,  _
                    ByVal LastDayPrintSend As Decimal,  _
                    ByVal FabricExcessReceive As Decimal,  _
                    ByVal StockInHand As Decimal,  _
                    ByVal TotalEmbSend As Integer,  _
                    ByVal LastDayEmdSend As Decimal,  _
                    ByVal TotalEmbReceived As Integer,  _
                    ByVal LastDayEmbReceived As Decimal) As MasterOrderStatusRow
            Dim rowMasterOrderStatusRow As MasterOrderStatusRow = CType(Me.NewRow,MasterOrderStatusRow)
            Dim columnValuesArray() As Object = New Object() {ProgramNo, BuyerCode, OrderReceiveDate, MinEx, MaxEx, PO, Con, Style, GarmentDescription, Fabrication, Color, OrderQty, FabricRequire, FabricReceived, FabricReceiveBalance, TotalCutting, CuttingPercentage, CuttingBalance, TotalPrintSend, TotalPrintReceive, PrintReceiveBalance, TotalInput, InputPercentage, InputBalance, Merchandiser, SewingQuantity, SewingPercentage, SewingBalance, PolyQuantity, CartonQuantity, ShipmentQuantity, ShipmentCartonQuantity, Print, Wash, EMB, AOP, LastDayFabricReceived, LastDayCutting, LastDayPrintReceive, LastDaySewing, ProgramAndStyle, PrintSupplier, LastDayInput, ExcessCutting, LastDayPrintSend, FabricExcessReceive, StockInHand, TotalEmbSend, LastDayEmdSend, TotalEmbReceived, LastDayEmbReceived}
            rowMasterOrderStatusRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMasterOrderStatusRow)
            Return rowMasterOrderStatusRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MasterOrderStatusDataTable = CType(MyBase.Clone,MasterOrderStatusDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MasterOrderStatusDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnProgramNo = MyBase.Columns("ProgramNo")
            Me.columnBuyerCode = MyBase.Columns("BuyerCode")
            Me.columnOrderReceiveDate = MyBase.Columns("OrderReceiveDate")
            Me.columnMinEx = MyBase.Columns("MinEx")
            Me.columnMaxEx = MyBase.Columns("MaxEx")
            Me.columnPO = MyBase.Columns("PO")
            Me.columnCon = MyBase.Columns("Con")
            Me.columnStyle = MyBase.Columns("Style")
            Me.columnGarmentDescription = MyBase.Columns("GarmentDescription")
            Me.columnFabrication = MyBase.Columns("Fabrication")
            Me.columnColor = MyBase.Columns("Color")
            Me.columnOrderQty = MyBase.Columns("OrderQty")
            Me.columnFabricRequire = MyBase.Columns("FabricRequire")
            Me.columnFabricReceived = MyBase.Columns("FabricReceived")
            Me.columnFabricReceiveBalance = MyBase.Columns("FabricReceiveBalance")
            Me.columnTotalCutting = MyBase.Columns("TotalCutting")
            Me.columnCuttingPercentage = MyBase.Columns("CuttingPercentage")
            Me.columnCuttingBalance = MyBase.Columns("CuttingBalance")
            Me.columnTotalPrintSend = MyBase.Columns("TotalPrintSend")
            Me.columnTotalPrintReceive = MyBase.Columns("TotalPrintReceive")
            Me.columnPrintReceiveBalance = MyBase.Columns("PrintReceiveBalance")
            Me.columnTotalInput = MyBase.Columns("TotalInput")
            Me.columnInputPercentage = MyBase.Columns("InputPercentage")
            Me.columnInputBalance = MyBase.Columns("InputBalance")
            Me.columnMerchandiser = MyBase.Columns("Merchandiser")
            Me.columnSewingQuantity = MyBase.Columns("SewingQuantity")
            Me.columnSewingPercentage = MyBase.Columns("SewingPercentage")
            Me.columnSewingBalance = MyBase.Columns("SewingBalance")
            Me.columnPolyQuantity = MyBase.Columns("PolyQuantity")
            Me.columnCartonQuantity = MyBase.Columns("CartonQuantity")
            Me.columnShipmentQuantity = MyBase.Columns("ShipmentQuantity")
            Me.columnShipmentCartonQuantity = MyBase.Columns("ShipmentCartonQuantity")
            Me.columnPrint = MyBase.Columns("Print")
            Me.columnWash = MyBase.Columns("Wash")
            Me.columnEMB = MyBase.Columns("EMB")
            Me.columnAOP = MyBase.Columns("AOP")
            Me.columnLastDayFabricReceived = MyBase.Columns("LastDayFabricReceived")
            Me.columnLastDayCutting = MyBase.Columns("LastDayCutting")
            Me.columnLastDayPrintReceive = MyBase.Columns("LastDayPrintReceive")
            Me.columnLastDaySewing = MyBase.Columns("LastDaySewing")
            Me.columnProgramAndStyle = MyBase.Columns("ProgramAndStyle")
            Me.columnPrintSupplier = MyBase.Columns("PrintSupplier")
            Me.columnLastDayInput = MyBase.Columns("LastDayInput")
            Me.columnExcessCutting = MyBase.Columns("ExcessCutting")
            Me.columnLastDayPrintSend = MyBase.Columns("LastDayPrintSend")
            Me.columnFabricExcessReceive = MyBase.Columns("FabricExcessReceive")
            Me.columnStockInHand = MyBase.Columns("StockInHand")
            Me.columnTotalEmbSend = MyBase.Columns("TotalEmbSend")
            Me.columnLastDayEmdSend = MyBase.Columns("LastDayEmdSend")
            Me.columnTotalEmbReceived = MyBase.Columns("TotalEmbReceived")
            Me.columnLastDayEmbReceived = MyBase.Columns("LastDayEmbReceived")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnProgramNo = New Global.System.Data.DataColumn("ProgramNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProgramNo)
            Me.columnBuyerCode = New Global.System.Data.DataColumn("BuyerCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBuyerCode)
            Me.columnOrderReceiveDate = New Global.System.Data.DataColumn("OrderReceiveDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrderReceiveDate)
            Me.columnMinEx = New Global.System.Data.DataColumn("MinEx", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMinEx)
            Me.columnMaxEx = New Global.System.Data.DataColumn("MaxEx", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaxEx)
            Me.columnPO = New Global.System.Data.DataColumn("PO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPO)
            Me.columnCon = New Global.System.Data.DataColumn("Con", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCon)
            Me.columnStyle = New Global.System.Data.DataColumn("Style", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStyle)
            Me.columnGarmentDescription = New Global.System.Data.DataColumn("GarmentDescription", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGarmentDescription)
            Me.columnFabrication = New Global.System.Data.DataColumn("Fabrication", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFabrication)
            Me.columnColor = New Global.System.Data.DataColumn("Color", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColor)
            Me.columnOrderQty = New Global.System.Data.DataColumn("OrderQty", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrderQty)
            Me.columnFabricRequire = New Global.System.Data.DataColumn("FabricRequire", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFabricRequire)
            Me.columnFabricReceived = New Global.System.Data.DataColumn("FabricReceived", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFabricReceived)
            Me.columnFabricReceiveBalance = New Global.System.Data.DataColumn("FabricReceiveBalance", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFabricReceiveBalance)
            Me.columnTotalCutting = New Global.System.Data.DataColumn("TotalCutting", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalCutting)
            Me.columnCuttingPercentage = New Global.System.Data.DataColumn("CuttingPercentage", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCuttingPercentage)
            Me.columnCuttingBalance = New Global.System.Data.DataColumn("CuttingBalance", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCuttingBalance)
            Me.columnTotalPrintSend = New Global.System.Data.DataColumn("TotalPrintSend", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalPrintSend)
            Me.columnTotalPrintReceive = New Global.System.Data.DataColumn("TotalPrintReceive", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalPrintReceive)
            Me.columnPrintReceiveBalance = New Global.System.Data.DataColumn("PrintReceiveBalance", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrintReceiveBalance)
            Me.columnTotalInput = New Global.System.Data.DataColumn("TotalInput", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalInput)
            Me.columnInputPercentage = New Global.System.Data.DataColumn("InputPercentage", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInputPercentage)
            Me.columnInputBalance = New Global.System.Data.DataColumn("InputBalance", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInputBalance)
            Me.columnMerchandiser = New Global.System.Data.DataColumn("Merchandiser", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMerchandiser)
            Me.columnSewingQuantity = New Global.System.Data.DataColumn("SewingQuantity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSewingQuantity)
            Me.columnSewingPercentage = New Global.System.Data.DataColumn("SewingPercentage", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSewingPercentage)
            Me.columnSewingBalance = New Global.System.Data.DataColumn("SewingBalance", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSewingBalance)
            Me.columnPolyQuantity = New Global.System.Data.DataColumn("PolyQuantity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPolyQuantity)
            Me.columnCartonQuantity = New Global.System.Data.DataColumn("CartonQuantity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCartonQuantity)
            Me.columnShipmentQuantity = New Global.System.Data.DataColumn("ShipmentQuantity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShipmentQuantity)
            Me.columnShipmentCartonQuantity = New Global.System.Data.DataColumn("ShipmentCartonQuantity", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShipmentCartonQuantity)
            Me.columnPrint = New Global.System.Data.DataColumn("Print", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrint)
            Me.columnWash = New Global.System.Data.DataColumn("Wash", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWash)
            Me.columnEMB = New Global.System.Data.DataColumn("EMB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMB)
            Me.columnAOP = New Global.System.Data.DataColumn("AOP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAOP)
            Me.columnLastDayFabricReceived = New Global.System.Data.DataColumn("LastDayFabricReceived", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastDayFabricReceived)
            Me.columnLastDayCutting = New Global.System.Data.DataColumn("LastDayCutting", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastDayCutting)
            Me.columnLastDayPrintReceive = New Global.System.Data.DataColumn("LastDayPrintReceive", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastDayPrintReceive)
            Me.columnLastDaySewing = New Global.System.Data.DataColumn("LastDaySewing", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastDaySewing)
            Me.columnProgramAndStyle = New Global.System.Data.DataColumn("ProgramAndStyle", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProgramAndStyle)
            Me.columnPrintSupplier = New Global.System.Data.DataColumn("PrintSupplier", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrintSupplier)
            Me.columnLastDayInput = New Global.System.Data.DataColumn("LastDayInput", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastDayInput)
            Me.columnExcessCutting = New Global.System.Data.DataColumn("ExcessCutting", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExcessCutting)
            Me.columnLastDayPrintSend = New Global.System.Data.DataColumn("LastDayPrintSend", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastDayPrintSend)
            Me.columnFabricExcessReceive = New Global.System.Data.DataColumn("FabricExcessReceive", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFabricExcessReceive)
            Me.columnStockInHand = New Global.System.Data.DataColumn("StockInHand", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStockInHand)
            Me.columnTotalEmbSend = New Global.System.Data.DataColumn("TotalEmbSend", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalEmbSend)
            Me.columnLastDayEmdSend = New Global.System.Data.DataColumn("LastDayEmdSend", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastDayEmdSend)
            Me.columnTotalEmbReceived = New Global.System.Data.DataColumn("TotalEmbReceived", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalEmbReceived)
            Me.columnLastDayEmbReceived = New Global.System.Data.DataColumn("LastDayEmbReceived", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastDayEmbReceived)
            Me.columnProgramNo.AllowDBNull = false
            Me.columnProgramNo.MaxLength = 50
            Me.columnBuyerCode.MaxLength = 50
            Me.columnPO.ReadOnly = true
            Me.columnPO.MaxLength = 2147483647
            Me.columnCon.ReadOnly = true
            Me.columnStyle.MaxLength = 200
            Me.columnGarmentDescription.MaxLength = 50
            Me.columnFabrication.AllowDBNull = false
            Me.columnFabrication.MaxLength = 616
            Me.columnColor.MaxLength = 200
            Me.columnFabricRequire.ReadOnly = true
            Me.columnFabricReceived.ReadOnly = true
            Me.columnFabricReceiveBalance.ReadOnly = true
            Me.columnTotalCutting.ReadOnly = true
            Me.columnCuttingPercentage.ReadOnly = true
            Me.columnCuttingBalance.ReadOnly = true
            Me.columnTotalPrintSend.ReadOnly = true
            Me.columnTotalPrintReceive.ReadOnly = true
            Me.columnPrintReceiveBalance.ReadOnly = true
            Me.columnTotalInput.ReadOnly = true
            Me.columnInputPercentage.ReadOnly = true
            Me.columnInputBalance.ReadOnly = true
            Me.columnMerchandiser.MaxLength = 100
            Me.columnSewingQuantity.ReadOnly = true
            Me.columnSewingPercentage.ReadOnly = true
            Me.columnSewingBalance.ReadOnly = true
            Me.columnPolyQuantity.ReadOnly = true
            Me.columnCartonQuantity.ReadOnly = true
            Me.columnShipmentQuantity.ReadOnly = true
            Me.columnShipmentCartonQuantity.ReadOnly = true
            Me.columnPrint.ReadOnly = true
            Me.columnPrint.MaxLength = 1
            Me.columnWash.ReadOnly = true
            Me.columnWash.MaxLength = 1
            Me.columnEMB.ReadOnly = true
            Me.columnEMB.MaxLength = 1
            Me.columnAOP.ReadOnly = true
            Me.columnAOP.MaxLength = 1
            Me.columnLastDayFabricReceived.ReadOnly = true
            Me.columnLastDayCutting.ReadOnly = true
            Me.columnLastDayPrintReceive.ReadOnly = true
            Me.columnLastDaySewing.ReadOnly = true
            Me.columnProgramAndStyle.ReadOnly = true
            Me.columnProgramAndStyle.MaxLength = 252
            Me.columnPrintSupplier.ReadOnly = true
            Me.columnPrintSupplier.MaxLength = 50
            Me.columnLastDayInput.ReadOnly = true
            Me.columnExcessCutting.ReadOnly = true
            Me.columnLastDayPrintSend.ReadOnly = true
            Me.columnFabricExcessReceive.ReadOnly = true
            Me.columnStockInHand.ReadOnly = true
            Me.columnTotalEmbSend.ReadOnly = true
            Me.columnLastDayEmdSend.ReadOnly = true
            Me.columnTotalEmbReceived.ReadOnly = true
            Me.columnLastDayEmbReceived.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewMasterOrderStatusRow() As MasterOrderStatusRow
            Return CType(Me.NewRow,MasterOrderStatusRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MasterOrderStatusRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MasterOrderStatusRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MasterOrderStatusRowChangedEvent) Is Nothing) Then
                RaiseEvent MasterOrderStatusRowChanged(Me, New MasterOrderStatusRowChangeEvent(CType(e.Row,MasterOrderStatusRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MasterOrderStatusRowChangingEvent) Is Nothing) Then
                RaiseEvent MasterOrderStatusRowChanging(Me, New MasterOrderStatusRowChangeEvent(CType(e.Row,MasterOrderStatusRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MasterOrderStatusRowDeletedEvent) Is Nothing) Then
                RaiseEvent MasterOrderStatusRowDeleted(Me, New MasterOrderStatusRowChangeEvent(CType(e.Row,MasterOrderStatusRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MasterOrderStatusRowDeletingEvent) Is Nothing) Then
                RaiseEvent MasterOrderStatusRowDeleting(Me, New MasterOrderStatusRowChangeEvent(CType(e.Row,MasterOrderStatusRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveMasterOrderStatusRow(ByVal row As MasterOrderStatusRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As MasterOrderStatusDataSet = New MasterOrderStatusDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MasterOrderStatusDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MasterOrderStatusRow
        Inherits Global.System.Data.DataRow
        
        Private tableMasterOrderStatus As MasterOrderStatusDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMasterOrderStatus = CType(Me.Table,MasterOrderStatusDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ProgramNo() As String
            Get
                Return CType(Me(Me.tableMasterOrderStatus.ProgramNoColumn),String)
            End Get
            Set
                Me(Me.tableMasterOrderStatus.ProgramNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BuyerCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.BuyerCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BuyerCode' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.BuyerCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OrderReceiveDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.OrderReceiveDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OrderReceiveDate' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.OrderReceiveDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MinEx() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.MinExColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MinEx' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.MinExColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MaxEx() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.MaxExColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaxEx' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.MaxExColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PO() As String
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.POColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PO' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.POColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Con() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.ConColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Con' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.ConColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Style() As String
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.StyleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Style' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.StyleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property GarmentDescription() As String
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.GarmentDescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GarmentDescription' in table 'MasterOrderStatus' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.GarmentDescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Fabrication() As String
            Get
                Return CType(Me(Me.tableMasterOrderStatus.FabricationColumn),String)
            End Get
            Set
                Me(Me.tableMasterOrderStatus.FabricationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Color() As String
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.ColorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Color' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.ColorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OrderQty() As Long
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.OrderQtyColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OrderQty' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.OrderQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FabricRequire() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.FabricRequireColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FabricRequire' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.FabricRequireColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FabricReceived() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.FabricReceivedColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FabricReceived' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.FabricReceivedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FabricReceiveBalance() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.FabricReceiveBalanceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FabricReceiveBalance' in table 'MasterOrderStatus' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.FabricReceiveBalanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TotalCutting() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.TotalCuttingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalCutting' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.TotalCuttingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CuttingPercentage() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.CuttingPercentageColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CuttingPercentage' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.CuttingPercentageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CuttingBalance() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.CuttingBalanceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CuttingBalance' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.CuttingBalanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TotalPrintSend() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.TotalPrintSendColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalPrintSend' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.TotalPrintSendColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TotalPrintReceive() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.TotalPrintReceiveColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalPrintReceive' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.TotalPrintReceiveColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PrintReceiveBalance() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.PrintReceiveBalanceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PrintReceiveBalance' in table 'MasterOrderStatus' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.PrintReceiveBalanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TotalInput() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.TotalInputColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalInput' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.TotalInputColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property InputPercentage() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.InputPercentageColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InputPercentage' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.InputPercentageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property InputBalance() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.InputBalanceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InputBalance' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.InputBalanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Merchandiser() As String
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.MerchandiserColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Merchandiser' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.MerchandiserColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SewingQuantity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.SewingQuantityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SewingQuantity' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.SewingQuantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SewingPercentage() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.SewingPercentageColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SewingPercentage' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.SewingPercentageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SewingBalance() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.SewingBalanceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SewingBalance' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.SewingBalanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PolyQuantity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.PolyQuantityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PolyQuantity' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.PolyQuantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CartonQuantity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.CartonQuantityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CartonQuantity' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.CartonQuantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ShipmentQuantity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.ShipmentQuantityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ShipmentQuantity' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.ShipmentQuantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ShipmentCartonQuantity() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.ShipmentCartonQuantityColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ShipmentCartonQuantity' in table 'MasterOrderStatus' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.ShipmentCartonQuantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Print() As String
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.PrintColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Print' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.PrintColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Wash() As String
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.WashColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Wash' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.WashColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EMB() As String
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.EMBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMB' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.EMBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AOP() As String
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.AOPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AOP' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.AOPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LastDayFabricReceived() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.LastDayFabricReceivedColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LastDayFabricReceived' in table 'MasterOrderStatus' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.LastDayFabricReceivedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LastDayCutting() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.LastDayCuttingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LastDayCutting' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.LastDayCuttingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LastDayPrintReceive() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.LastDayPrintReceiveColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LastDayPrintReceive' in table 'MasterOrderStatus' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.LastDayPrintReceiveColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LastDaySewing() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.LastDaySewingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LastDaySewing' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.LastDaySewingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ProgramAndStyle() As String
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.ProgramAndStyleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProgramAndStyle' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.ProgramAndStyleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PrintSupplier() As String
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.PrintSupplierColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PrintSupplier' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.PrintSupplierColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LastDayInput() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.LastDayInputColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LastDayInput' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.LastDayInputColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ExcessCutting() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.ExcessCuttingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExcessCutting' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.ExcessCuttingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LastDayPrintSend() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.LastDayPrintSendColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LastDayPrintSend' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.LastDayPrintSendColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FabricExcessReceive() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.FabricExcessReceiveColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FabricExcessReceive' in table 'MasterOrderStatus' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.FabricExcessReceiveColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property StockInHand() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.StockInHandColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StockInHand' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.StockInHandColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TotalEmbSend() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.TotalEmbSendColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalEmbSend' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.TotalEmbSendColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LastDayEmdSend() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.LastDayEmdSendColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LastDayEmdSend' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.LastDayEmdSendColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TotalEmbReceived() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.TotalEmbReceivedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalEmbReceived' in table 'MasterOrderStatus' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.TotalEmbReceivedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LastDayEmbReceived() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMasterOrderStatus.LastDayEmbReceivedColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LastDayEmbReceived' in table 'MasterOrderStatus' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableMasterOrderStatus.LastDayEmbReceivedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBuyerCodeNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.BuyerCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBuyerCodeNull()
            Me(Me.tableMasterOrderStatus.BuyerCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOrderReceiveDateNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.OrderReceiveDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOrderReceiveDateNull()
            Me(Me.tableMasterOrderStatus.OrderReceiveDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMinExNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.MinExColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMinExNull()
            Me(Me.tableMasterOrderStatus.MinExColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMaxExNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.MaxExColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMaxExNull()
            Me(Me.tableMasterOrderStatus.MaxExColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPONull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.POColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPONull()
            Me(Me.tableMasterOrderStatus.POColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsConNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.ConColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetConNull()
            Me(Me.tableMasterOrderStatus.ConColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsStyleNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.StyleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetStyleNull()
            Me(Me.tableMasterOrderStatus.StyleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsGarmentDescriptionNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.GarmentDescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetGarmentDescriptionNull()
            Me(Me.tableMasterOrderStatus.GarmentDescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsColorNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.ColorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetColorNull()
            Me(Me.tableMasterOrderStatus.ColorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOrderQtyNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.OrderQtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOrderQtyNull()
            Me(Me.tableMasterOrderStatus.OrderQtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFabricRequireNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.FabricRequireColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFabricRequireNull()
            Me(Me.tableMasterOrderStatus.FabricRequireColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFabricReceivedNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.FabricReceivedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFabricReceivedNull()
            Me(Me.tableMasterOrderStatus.FabricReceivedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFabricReceiveBalanceNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.FabricReceiveBalanceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFabricReceiveBalanceNull()
            Me(Me.tableMasterOrderStatus.FabricReceiveBalanceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTotalCuttingNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.TotalCuttingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTotalCuttingNull()
            Me(Me.tableMasterOrderStatus.TotalCuttingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCuttingPercentageNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.CuttingPercentageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCuttingPercentageNull()
            Me(Me.tableMasterOrderStatus.CuttingPercentageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCuttingBalanceNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.CuttingBalanceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCuttingBalanceNull()
            Me(Me.tableMasterOrderStatus.CuttingBalanceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTotalPrintSendNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.TotalPrintSendColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTotalPrintSendNull()
            Me(Me.tableMasterOrderStatus.TotalPrintSendColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTotalPrintReceiveNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.TotalPrintReceiveColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTotalPrintReceiveNull()
            Me(Me.tableMasterOrderStatus.TotalPrintReceiveColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPrintReceiveBalanceNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.PrintReceiveBalanceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPrintReceiveBalanceNull()
            Me(Me.tableMasterOrderStatus.PrintReceiveBalanceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTotalInputNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.TotalInputColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTotalInputNull()
            Me(Me.tableMasterOrderStatus.TotalInputColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsInputPercentageNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.InputPercentageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetInputPercentageNull()
            Me(Me.tableMasterOrderStatus.InputPercentageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsInputBalanceNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.InputBalanceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetInputBalanceNull()
            Me(Me.tableMasterOrderStatus.InputBalanceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMerchandiserNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.MerchandiserColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMerchandiserNull()
            Me(Me.tableMasterOrderStatus.MerchandiserColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSewingQuantityNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.SewingQuantityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSewingQuantityNull()
            Me(Me.tableMasterOrderStatus.SewingQuantityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSewingPercentageNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.SewingPercentageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSewingPercentageNull()
            Me(Me.tableMasterOrderStatus.SewingPercentageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSewingBalanceNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.SewingBalanceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSewingBalanceNull()
            Me(Me.tableMasterOrderStatus.SewingBalanceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPolyQuantityNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.PolyQuantityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPolyQuantityNull()
            Me(Me.tableMasterOrderStatus.PolyQuantityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCartonQuantityNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.CartonQuantityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCartonQuantityNull()
            Me(Me.tableMasterOrderStatus.CartonQuantityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsShipmentQuantityNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.ShipmentQuantityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetShipmentQuantityNull()
            Me(Me.tableMasterOrderStatus.ShipmentQuantityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsShipmentCartonQuantityNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.ShipmentCartonQuantityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetShipmentCartonQuantityNull()
            Me(Me.tableMasterOrderStatus.ShipmentCartonQuantityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPrintNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.PrintColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPrintNull()
            Me(Me.tableMasterOrderStatus.PrintColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsWashNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.WashColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetWashNull()
            Me(Me.tableMasterOrderStatus.WashColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEMBNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.EMBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEMBNull()
            Me(Me.tableMasterOrderStatus.EMBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAOPNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.AOPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAOPNull()
            Me(Me.tableMasterOrderStatus.AOPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLastDayFabricReceivedNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.LastDayFabricReceivedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLastDayFabricReceivedNull()
            Me(Me.tableMasterOrderStatus.LastDayFabricReceivedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLastDayCuttingNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.LastDayCuttingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLastDayCuttingNull()
            Me(Me.tableMasterOrderStatus.LastDayCuttingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLastDayPrintReceiveNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.LastDayPrintReceiveColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLastDayPrintReceiveNull()
            Me(Me.tableMasterOrderStatus.LastDayPrintReceiveColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLastDaySewingNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.LastDaySewingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLastDaySewingNull()
            Me(Me.tableMasterOrderStatus.LastDaySewingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsProgramAndStyleNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.ProgramAndStyleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetProgramAndStyleNull()
            Me(Me.tableMasterOrderStatus.ProgramAndStyleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPrintSupplierNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.PrintSupplierColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPrintSupplierNull()
            Me(Me.tableMasterOrderStatus.PrintSupplierColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLastDayInputNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.LastDayInputColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLastDayInputNull()
            Me(Me.tableMasterOrderStatus.LastDayInputColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsExcessCuttingNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.ExcessCuttingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetExcessCuttingNull()
            Me(Me.tableMasterOrderStatus.ExcessCuttingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLastDayPrintSendNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.LastDayPrintSendColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLastDayPrintSendNull()
            Me(Me.tableMasterOrderStatus.LastDayPrintSendColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFabricExcessReceiveNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.FabricExcessReceiveColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFabricExcessReceiveNull()
            Me(Me.tableMasterOrderStatus.FabricExcessReceiveColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsStockInHandNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.StockInHandColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetStockInHandNull()
            Me(Me.tableMasterOrderStatus.StockInHandColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTotalEmbSendNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.TotalEmbSendColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTotalEmbSendNull()
            Me(Me.tableMasterOrderStatus.TotalEmbSendColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLastDayEmdSendNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.LastDayEmdSendColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLastDayEmdSendNull()
            Me(Me.tableMasterOrderStatus.LastDayEmdSendColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTotalEmbReceivedNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.TotalEmbReceivedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTotalEmbReceivedNull()
            Me(Me.tableMasterOrderStatus.TotalEmbReceivedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLastDayEmbReceivedNull() As Boolean
            Return Me.IsNull(Me.tableMasterOrderStatus.LastDayEmbReceivedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLastDayEmbReceivedNull()
            Me(Me.tableMasterOrderStatus.LastDayEmbReceivedColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class MasterOrderStatusRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MasterOrderStatusRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As MasterOrderStatusRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As MasterOrderStatusRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace MasterOrderStatusDataSetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class MasterOrderStatusTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "MasterOrderStatus"
            tableMapping.ColumnMappings.Add("ProgramNo", "ProgramNo")
            tableMapping.ColumnMappings.Add("BuyerCode", "BuyerCode")
            tableMapping.ColumnMappings.Add("OrderReceiveDate", "OrderReceiveDate")
            tableMapping.ColumnMappings.Add("MinEx", "MinEx")
            tableMapping.ColumnMappings.Add("MaxEx", "MaxEx")
            tableMapping.ColumnMappings.Add("PO", "PO")
            tableMapping.ColumnMappings.Add("Con", "Con")
            tableMapping.ColumnMappings.Add("Style", "Style")
            tableMapping.ColumnMappings.Add("GarmentDescription", "GarmentDescription")
            tableMapping.ColumnMappings.Add("Fabrication", "Fabrication")
            tableMapping.ColumnMappings.Add("Color", "Color")
            tableMapping.ColumnMappings.Add("OrderQty", "OrderQty")
            tableMapping.ColumnMappings.Add("FabricRequire", "FabricRequire")
            tableMapping.ColumnMappings.Add("FabricReceived", "FabricReceived")
            tableMapping.ColumnMappings.Add("FabricReceiveBalance", "FabricReceiveBalance")
            tableMapping.ColumnMappings.Add("TotalCutting", "TotalCutting")
            tableMapping.ColumnMappings.Add("CuttingPercentage", "CuttingPercentage")
            tableMapping.ColumnMappings.Add("CuttingBalance", "CuttingBalance")
            tableMapping.ColumnMappings.Add("TotalPrintSend", "TotalPrintSend")
            tableMapping.ColumnMappings.Add("TotalPrintReceive", "TotalPrintReceive")
            tableMapping.ColumnMappings.Add("PrintReceiveBalance", "PrintReceiveBalance")
            tableMapping.ColumnMappings.Add("TotalInput", "TotalInput")
            tableMapping.ColumnMappings.Add("InputPercentage", "InputPercentage")
            tableMapping.ColumnMappings.Add("InputBalance", "InputBalance")
            tableMapping.ColumnMappings.Add("Merchandiser", "Merchandiser")
            tableMapping.ColumnMappings.Add("SewingQuantity", "SewingQuantity")
            tableMapping.ColumnMappings.Add("SewingPercentage", "SewingPercentage")
            tableMapping.ColumnMappings.Add("SewingBalance", "SewingBalance")
            tableMapping.ColumnMappings.Add("PolyQuantity", "PolyQuantity")
            tableMapping.ColumnMappings.Add("CartonQuantity", "CartonQuantity")
            tableMapping.ColumnMappings.Add("ShipmentQuantity", "ShipmentQuantity")
            tableMapping.ColumnMappings.Add("ShipmentCartonQuantity", "ShipmentCartonQuantity")
            tableMapping.ColumnMappings.Add("Print", "Print")
            tableMapping.ColumnMappings.Add("Wash", "Wash")
            tableMapping.ColumnMappings.Add("EMB", "EMB")
            tableMapping.ColumnMappings.Add("AOP", "AOP")
            tableMapping.ColumnMappings.Add("LastDayFabricReceived", "LastDayFabricReceived")
            tableMapping.ColumnMappings.Add("LastDayCutting", "LastDayCutting")
            tableMapping.ColumnMappings.Add("LastDayPrintReceive", "LastDayPrintReceive")
            tableMapping.ColumnMappings.Add("LastDaySewing", "LastDaySewing")
            tableMapping.ColumnMappings.Add("ProgramAndStyle", "ProgramAndStyle")
            tableMapping.ColumnMappings.Add("PrintSupplier", "PrintSupplier")
            tableMapping.ColumnMappings.Add("LastDayInput", "LastDayInput")
            tableMapping.ColumnMappings.Add("ExcessCutting", "ExcessCutting")
            tableMapping.ColumnMappings.Add("LastDayPrintSend", "LastDayPrintSend")
            tableMapping.ColumnMappings.Add("FabricExcessReceive", "FabricExcessReceive")
            tableMapping.ColumnMappings.Add("StockInHand", "StockInHand")
            tableMapping.ColumnMappings.Add("TotalEmbSend", "TotalEmbSend")
            tableMapping.ColumnMappings.Add("LastDayEmdSend", "LastDayEmdSend")
            tableMapping.ColumnMappings.Add("TotalEmbReceived", "TotalEmbReceived")
            tableMapping.ColumnMappings.Add("LastDayEmbReceived", "LastDayEmbReceived")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.KSoft_Apparel.My.MySettings.Default.KSoft_ApparelConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(5) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        AOP, BuyerCode, CartonQuantity, Color, Con, CuttingBalance, Cutting"& _ 
                "Percentage, EMB, ExcessCutting, FabricExcessReceive, FabricReceiveBalance, Fabri"& _ 
                "cReceived, FabricRequire, Fabrication, GarmentDescription, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "      InputBalance, InputPercentage, LastDayCutting, LastDayEmbReceived, LastDay"& _ 
                "EmdSend, LastDayFabricReceived, LastDayInput, LastDayPrintReceive, LastDayPrintS"& _ 
                "end, LastDaySewing, MaxEx, Merchandiser, MinEx, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Order"& _ 
                "Qty, OrderReceiveDate, PO, PolyQuantity, [Print], PrintReceiveBalance, PrintSupp"& _ 
                "lier, ProgramAndStyle, ProgramNo, SewingBalance, SewingPercentage, SewingQuantit"& _ 
                "y, ShipmentCartonQuantity, ShipmentQuantity, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         StockInH"& _ 
                "and, Style, TotalCutting, TotalEmbReceived, TotalEmbSend, TotalInput, TotalPrint"& _ 
                "Receive, TotalPrintSend, Wash"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            MasterOrderStatus"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        AOP, BuyerCode, CartonQuantity, Color, Con, CuttingBalance, Cutting"& _ 
                "Percentage, EMB, ExcessCutting, FabricExcessReceive, FabricReceiveBalance, Fabri"& _ 
                "cReceived, FabricRequire, Fabrication, GarmentDescription, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "      InputBalance, InputPercentage, LastDayCutting, LastDayEmbReceived, LastDay"& _ 
                "EmdSend, LastDayFabricReceived, LastDayInput, LastDayPrintReceive, LastDayPrintS"& _ 
                "end, LastDaySewing, MaxEx, Merchandiser, MinEx, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Order"& _ 
                "Qty, OrderReceiveDate, PO, PolyQuantity, [Print], PrintReceiveBalance, PrintSupp"& _ 
                "lier, ProgramAndStyle, ProgramNo, SewingBalance, SewingPercentage, SewingQuantit"& _ 
                "y, ShipmentCartonQuantity, ShipmentQuantity, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         StockInH"& _ 
                "and, Style, TotalCutting, TotalEmbReceived, TotalEmbSend, TotalInput, TotalPrint"& _ 
                "Receive, TotalPrintSend, Wash, IsCuttingRunning"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            MasterOrderStat"& _ 
                "us"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT AOP, BuyerCode, CartonQuantity, Color, Con, CuttingBalance, CuttingPercent"& _ 
                "age, EMB, ExcessCutting, FabricExcessReceive, FabricReceiveBalance, FabricReceiv"& _ 
                "ed, FabricRequire, Fabrication, GarmentDescription, InputBalance, InputPercentag"& _ 
                "e, LastDayCutting, LastDayEmbReceived, LastDayEmdSend, LastDayFabricReceived, La"& _ 
                "stDayInput, LastDayPrintReceive, LastDayPrintSend, LastDaySewing, MaxEx, Merchan"& _ 
                "diser, MinEx, OrderQty, OrderReceiveDate, PO, PolyQuantity, [Print], PrintReceiv"& _ 
                "eBalance, PrintSupplier, ProgramAndStyle, ProgramNo, SewingBalance, SewingPercen"& _ 
                "tage, SewingQuantity, ShipmentCartonQuantity, ShipmentQuantity, StockInHand, Sty"& _ 
                "le, TotalCutting, TotalEmbReceived, TotalEmbSend, TotalInput, TotalPrintReceive,"& _ 
                " TotalPrintSend, Wash FROM MasterOrderStatus WHERE (BuyerCode = @BuyerCode)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BuyerCode", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "BuyerCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT        AOP, BuyerCode, CartonQuantity, Color, Con, CuttingBalance, Cutting"& _ 
                "Percentage, EMB, ExcessCutting, FabricExcessReceive, FabricReceiveBalance, Fabri"& _ 
                "cReceived, FabricRequire, Fabrication, GarmentDescription, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "      InputBalance, InputPercentage, LastDayCutting, LastDayEmbReceived, LastDay"& _ 
                "EmdSend, LastDayFabricReceived, LastDayInput, LastDayPrintReceive, LastDayPrintS"& _ 
                "end, LastDaySewing, MaxEx, Merchandiser, MinEx, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Order"& _ 
                "Qty, OrderReceiveDate, PO, PolyQuantity, [Print], PrintReceiveBalance, PrintSupp"& _ 
                "lier, ProgramAndStyle, ProgramNo, SewingBalance, SewingPercentage, SewingQuantit"& _ 
                "y, ShipmentCartonQuantity, ShipmentQuantity, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         StockInH"& _ 
                "and, Style, TotalCutting, TotalEmbReceived, TotalEmbSend, TotalInput, TotalPrint"& _ 
                "Receive, TotalPrintSend, Wash, IsCuttingRunning"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            MasterOrderStat"& _ 
                "us"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (Merchandiser = @Merchandiser)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Merchandiser", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "Merchandiser", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT        AOP, BuyerCode, CartonQuantity, Color, Con, CuttingBalance, Cutting"& _ 
                "Percentage, EMB, ExcessCutting, FabricExcessReceive, FabricReceiveBalance, Fabri"& _ 
                "cReceived, FabricRequire, Fabrication, GarmentDescription, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "      InputBalance, InputPercentage, LastDayCutting, LastDayEmbReceived, LastDay"& _ 
                "EmdSend, LastDayFabricReceived, LastDayInput, LastDayPrintReceive, LastDayPrintS"& _ 
                "end, LastDaySewing, MaxEx, Merchandiser, MinEx, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Order"& _ 
                "Qty, OrderReceiveDate, PO, PolyQuantity, [Print], PrintReceiveBalance, PrintSupp"& _ 
                "lier, ProgramAndStyle, ProgramNo, SewingBalance, SewingPercentage, SewingQuantit"& _ 
                "y, ShipmentCartonQuantity, ShipmentQuantity, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         StockInH"& _ 
                "and, Style, TotalCutting, TotalEmbReceived, TotalEmbSend, TotalInput, TotalPrint"& _ 
                "Receive, TotalPrintSend, Wash, IsCuttingRunning"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            MasterOrderStat"& _ 
                "us"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (ProgramAndStyle LIKE '%' + @String + '%')"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@String", Global.System.Data.SqlDbType.VarChar, 252, Global.System.Data.ParameterDirection.Input, 0, 0, "ProgramAndStyle", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT        AOP, BuyerCode, CartonQuantity, Color, Con, CuttingBalance, Cutting"& _ 
                "Percentage, EMB, ExcessCutting, FabricExcessReceive, FabricReceiveBalance, Fabri"& _ 
                "cReceived, FabricRequire, Fabrication, GarmentDescription, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "      InputBalance, InputPercentage, LastDayCutting, LastDayEmbReceived, LastDay"& _ 
                "EmdSend, LastDayFabricReceived, LastDayInput, LastDayPrintReceive, LastDayPrintS"& _ 
                "end, LastDaySewing, MaxEx, Merchandiser, MinEx, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Order"& _ 
                "Qty, OrderReceiveDate, PO, PolyQuantity, [Print], PrintReceiveBalance, PrintSupp"& _ 
                "lier, ProgramAndStyle, ProgramNo, SewingBalance, SewingPercentage, SewingQuantit"& _ 
                "y, ShipmentCartonQuantity, ShipmentQuantity, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         StockInH"& _ 
                "and, Style, TotalCutting, TotalEmbReceived, TotalEmbSend, TotalInput, TotalPrint"& _ 
                "Receive, TotalPrintSend, Wash, IsCuttingRunning"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            MasterOrderStat"& _ 
                "us"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (IsCuttingRunning = 1)"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As MasterOrderStatusDataSet.MasterOrderStatusDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As MasterOrderStatusDataSet.MasterOrderStatusDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As MasterOrderStatusDataSet.MasterOrderStatusDataTable = New MasterOrderStatusDataSet.MasterOrderStatusDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByAll(ByVal dataTable As MasterOrderStatusDataSet.MasterOrderStatusDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByAll() As MasterOrderStatusDataSet.MasterOrderStatusDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Dim dataTable As MasterOrderStatusDataSet.MasterOrderStatusDataTable = New MasterOrderStatusDataSet.MasterOrderStatusDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByBuyer(ByVal dataTable As MasterOrderStatusDataSet.MasterOrderStatusDataTable, ByVal BuyerCode As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (BuyerCode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(BuyerCode,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByBuyer(ByVal BuyerCode As String) As MasterOrderStatusDataSet.MasterOrderStatusDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (BuyerCode Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(BuyerCode,String)
            End If
            Dim dataTable As MasterOrderStatusDataSet.MasterOrderStatusDataTable = New MasterOrderStatusDataSet.MasterOrderStatusDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByMerchandiser(ByVal dataTable As MasterOrderStatusDataSet.MasterOrderStatusDataTable, ByVal Merchandiser As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (Merchandiser Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Merchandiser,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByMerchandiser(ByVal Merchandiser As String) As MasterOrderStatusDataSet.MasterOrderStatusDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (Merchandiser Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Merchandiser,String)
            End If
            Dim dataTable As MasterOrderStatusDataSet.MasterOrderStatusDataTable = New MasterOrderStatusDataSet.MasterOrderStatusDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByProgramAndStyle(ByVal dataTable As MasterOrderStatusDataSet.MasterOrderStatusDataTable, ByVal _String As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            If (_String Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(_String,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByProgramAndStyle(ByVal _String As String) As MasterOrderStatusDataSet.MasterOrderStatusDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            If (_String Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(_String,String)
            End If
            Dim dataTable As MasterOrderStatusDataSet.MasterOrderStatusDataTable = New MasterOrderStatusDataSet.MasterOrderStatusDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByRunning(ByVal dataTable As MasterOrderStatusDataSet.MasterOrderStatusDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByRunning() As MasterOrderStatusDataSet.MasterOrderStatusDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Dim dataTable As MasterOrderStatusDataSet.MasterOrderStatusDataTable = New MasterOrderStatusDataSet.MasterOrderStatusDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As MasterOrderStatusDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As MasterOrderStatusDataSet, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As MasterOrderStatusDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As MasterOrderStatusDataSet) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
